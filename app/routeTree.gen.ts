/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as appWeeklyPrepIndexImport } from './routes/(app)/weekly-prep/index'
import { Route as appRecipesIndexImport } from './routes/(app)/recipes/index'
import { Route as appHelpIndexImport } from './routes/(app)/help/index'
import { Route as appGeneratingIndexImport } from './routes/(app)/generating/index'
import { Route as appDashboardIndexImport } from './routes/(app)/dashboard/index'
import { Route as appSettingsPreferencesIndexImport } from './routes/(app)/settings/preferences/index'
import { Route as appSettingsPlanIndexImport } from './routes/(app)/settings/plan/index'
import { Route as appRecipesSavedIndexImport } from './routes/(app)/recipes/saved/index'
import { Route as appRecipesPublicIndexImport } from './routes/(app)/recipes/public/index'
import { Route as appRecipesIdIndexImport } from './routes/(app)/recipes/$id/index'
import { Route as appRecipesIdPrintIndexImport } from './routes/(app)/recipes/$id/print/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const appWeeklyPrepIndexRoute = appWeeklyPrepIndexImport.update({
  id: '/(app)/weekly-prep/',
  path: '/weekly-prep/',
  getParentRoute: () => rootRoute,
} as any)

const appRecipesIndexRoute = appRecipesIndexImport.update({
  id: '/(app)/recipes/',
  path: '/recipes/',
  getParentRoute: () => rootRoute,
} as any)

const appHelpIndexRoute = appHelpIndexImport.update({
  id: '/(app)/help/',
  path: '/help/',
  getParentRoute: () => rootRoute,
} as any)

const appGeneratingIndexRoute = appGeneratingIndexImport.update({
  id: '/(app)/generating/',
  path: '/generating/',
  getParentRoute: () => rootRoute,
} as any)

const appDashboardIndexRoute = appDashboardIndexImport.update({
  id: '/(app)/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const appSettingsPreferencesIndexRoute =
  appSettingsPreferencesIndexImport.update({
    id: '/(app)/settings/preferences/',
    path: '/settings/preferences/',
    getParentRoute: () => rootRoute,
  } as any)

const appSettingsPlanIndexRoute = appSettingsPlanIndexImport.update({
  id: '/(app)/settings/plan/',
  path: '/settings/plan/',
  getParentRoute: () => rootRoute,
} as any)

const appRecipesSavedIndexRoute = appRecipesSavedIndexImport.update({
  id: '/(app)/recipes/saved/',
  path: '/recipes/saved/',
  getParentRoute: () => rootRoute,
} as any)

const appRecipesPublicIndexRoute = appRecipesPublicIndexImport.update({
  id: '/(app)/recipes/public/',
  path: '/recipes/public/',
  getParentRoute: () => rootRoute,
} as any)

const appRecipesIdIndexRoute = appRecipesIdIndexImport.update({
  id: '/(app)/recipes/$id/',
  path: '/recipes/$id/',
  getParentRoute: () => rootRoute,
} as any)

const appRecipesIdPrintIndexRoute = appRecipesIdPrintIndexImport.update({
  id: '/(app)/recipes/$id/print/',
  path: '/recipes/$id/print/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/dashboard/': {
      id: '/(app)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appDashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/generating/': {
      id: '/(app)/generating/'
      path: '/generating'
      fullPath: '/generating'
      preLoaderRoute: typeof appGeneratingIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/help/': {
      id: '/(app)/help/'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof appHelpIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/recipes/': {
      id: '/(app)/recipes/'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof appRecipesIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/weekly-prep/': {
      id: '/(app)/weekly-prep/'
      path: '/weekly-prep'
      fullPath: '/weekly-prep'
      preLoaderRoute: typeof appWeeklyPrepIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/recipes/$id/': {
      id: '/(app)/recipes/$id/'
      path: '/recipes/$id'
      fullPath: '/recipes/$id'
      preLoaderRoute: typeof appRecipesIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/recipes/public/': {
      id: '/(app)/recipes/public/'
      path: '/recipes/public'
      fullPath: '/recipes/public'
      preLoaderRoute: typeof appRecipesPublicIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/recipes/saved/': {
      id: '/(app)/recipes/saved/'
      path: '/recipes/saved'
      fullPath: '/recipes/saved'
      preLoaderRoute: typeof appRecipesSavedIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/settings/plan/': {
      id: '/(app)/settings/plan/'
      path: '/settings/plan'
      fullPath: '/settings/plan'
      preLoaderRoute: typeof appSettingsPlanIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/settings/preferences/': {
      id: '/(app)/settings/preferences/'
      path: '/settings/preferences'
      fullPath: '/settings/preferences'
      preLoaderRoute: typeof appSettingsPreferencesIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/recipes/$id/print/': {
      id: '/(app)/recipes/$id/print/'
      path: '/recipes/$id/print'
      fullPath: '/recipes/$id/print'
      preLoaderRoute: typeof appRecipesIdPrintIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof appDashboardIndexRoute
  '/generating': typeof appGeneratingIndexRoute
  '/help': typeof appHelpIndexRoute
  '/recipes': typeof appRecipesIndexRoute
  '/weekly-prep': typeof appWeeklyPrepIndexRoute
  '/recipes/$id': typeof appRecipesIdIndexRoute
  '/recipes/public': typeof appRecipesPublicIndexRoute
  '/recipes/saved': typeof appRecipesSavedIndexRoute
  '/settings/plan': typeof appSettingsPlanIndexRoute
  '/settings/preferences': typeof appSettingsPreferencesIndexRoute
  '/recipes/$id/print': typeof appRecipesIdPrintIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof appDashboardIndexRoute
  '/generating': typeof appGeneratingIndexRoute
  '/help': typeof appHelpIndexRoute
  '/recipes': typeof appRecipesIndexRoute
  '/weekly-prep': typeof appWeeklyPrepIndexRoute
  '/recipes/$id': typeof appRecipesIdIndexRoute
  '/recipes/public': typeof appRecipesPublicIndexRoute
  '/recipes/saved': typeof appRecipesSavedIndexRoute
  '/settings/plan': typeof appSettingsPlanIndexRoute
  '/settings/preferences': typeof appSettingsPreferencesIndexRoute
  '/recipes/$id/print': typeof appRecipesIdPrintIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(app)/dashboard/': typeof appDashboardIndexRoute
  '/(app)/generating/': typeof appGeneratingIndexRoute
  '/(app)/help/': typeof appHelpIndexRoute
  '/(app)/recipes/': typeof appRecipesIndexRoute
  '/(app)/weekly-prep/': typeof appWeeklyPrepIndexRoute
  '/(app)/recipes/$id/': typeof appRecipesIdIndexRoute
  '/(app)/recipes/public/': typeof appRecipesPublicIndexRoute
  '/(app)/recipes/saved/': typeof appRecipesSavedIndexRoute
  '/(app)/settings/plan/': typeof appSettingsPlanIndexRoute
  '/(app)/settings/preferences/': typeof appSettingsPreferencesIndexRoute
  '/(app)/recipes/$id/print/': typeof appRecipesIdPrintIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/generating'
    | '/help'
    | '/recipes'
    | '/weekly-prep'
    | '/recipes/$id'
    | '/recipes/public'
    | '/recipes/saved'
    | '/settings/plan'
    | '/settings/preferences'
    | '/recipes/$id/print'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/generating'
    | '/help'
    | '/recipes'
    | '/weekly-prep'
    | '/recipes/$id'
    | '/recipes/public'
    | '/recipes/saved'
    | '/settings/plan'
    | '/settings/preferences'
    | '/recipes/$id/print'
  id:
    | '__root__'
    | '/'
    | '/(app)/dashboard/'
    | '/(app)/generating/'
    | '/(app)/help/'
    | '/(app)/recipes/'
    | '/(app)/weekly-prep/'
    | '/(app)/recipes/$id/'
    | '/(app)/recipes/public/'
    | '/(app)/recipes/saved/'
    | '/(app)/settings/plan/'
    | '/(app)/settings/preferences/'
    | '/(app)/recipes/$id/print/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appDashboardIndexRoute: typeof appDashboardIndexRoute
  appGeneratingIndexRoute: typeof appGeneratingIndexRoute
  appHelpIndexRoute: typeof appHelpIndexRoute
  appRecipesIndexRoute: typeof appRecipesIndexRoute
  appWeeklyPrepIndexRoute: typeof appWeeklyPrepIndexRoute
  appRecipesIdIndexRoute: typeof appRecipesIdIndexRoute
  appRecipesPublicIndexRoute: typeof appRecipesPublicIndexRoute
  appRecipesSavedIndexRoute: typeof appRecipesSavedIndexRoute
  appSettingsPlanIndexRoute: typeof appSettingsPlanIndexRoute
  appSettingsPreferencesIndexRoute: typeof appSettingsPreferencesIndexRoute
  appRecipesIdPrintIndexRoute: typeof appRecipesIdPrintIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appDashboardIndexRoute: appDashboardIndexRoute,
  appGeneratingIndexRoute: appGeneratingIndexRoute,
  appHelpIndexRoute: appHelpIndexRoute,
  appRecipesIndexRoute: appRecipesIndexRoute,
  appWeeklyPrepIndexRoute: appWeeklyPrepIndexRoute,
  appRecipesIdIndexRoute: appRecipesIdIndexRoute,
  appRecipesPublicIndexRoute: appRecipesPublicIndexRoute,
  appRecipesSavedIndexRoute: appRecipesSavedIndexRoute,
  appSettingsPlanIndexRoute: appSettingsPlanIndexRoute,
  appSettingsPreferencesIndexRoute: appSettingsPreferencesIndexRoute,
  appRecipesIdPrintIndexRoute: appRecipesIdPrintIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(app)/dashboard/",
        "/(app)/generating/",
        "/(app)/help/",
        "/(app)/recipes/",
        "/(app)/weekly-prep/",
        "/(app)/recipes/$id/",
        "/(app)/recipes/public/",
        "/(app)/recipes/saved/",
        "/(app)/settings/plan/",
        "/(app)/settings/preferences/",
        "/(app)/recipes/$id/print/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(app)/dashboard/": {
      "filePath": "(app)/dashboard/index.tsx"
    },
    "/(app)/generating/": {
      "filePath": "(app)/generating/index.tsx"
    },
    "/(app)/help/": {
      "filePath": "(app)/help/index.tsx"
    },
    "/(app)/recipes/": {
      "filePath": "(app)/recipes/index.tsx"
    },
    "/(app)/weekly-prep/": {
      "filePath": "(app)/weekly-prep/index.tsx"
    },
    "/(app)/recipes/$id/": {
      "filePath": "(app)/recipes/$id/index.tsx"
    },
    "/(app)/recipes/public/": {
      "filePath": "(app)/recipes/public/index.tsx"
    },
    "/(app)/recipes/saved/": {
      "filePath": "(app)/recipes/saved/index.tsx"
    },
    "/(app)/settings/plan/": {
      "filePath": "(app)/settings/plan/index.tsx"
    },
    "/(app)/settings/preferences/": {
      "filePath": "(app)/settings/preferences/index.tsx"
    },
    "/(app)/recipes/$id/print/": {
      "filePath": "(app)/recipes/$id/print/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
